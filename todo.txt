2 Website for people to connect wallet and invest
Fortmatic + Metamask
People have crypto in their wallet -> integrate on-ramp solution or withdraw from Binance
Accept USDC, WETH, WBTC payments (we swap inside the smart contract)
			
- Beefy USDC pool (15% APY) - BSC, Polygon, Arbitrum or Celo
		Smart contract:
		- addLiquidity -> user deposits USDC and smart contracts stores an entry for it (hashmap or we mint DEEP token)
		- removeLiquidity -> user gets money back
		- rebalance() ->
		- transferFromContractToOtherPools() -> directly after addLiquidity. We get USDC from reserve and trigger the method addLiquidity from other pool (you get a token back from other smart contract) - test with pytest in a forked network) - eth-brownie run console --network fork-polygon
					
		1. Get USDC from our smart contract reserve
		2. call addLiquidity from curve contract, send USDC and get curveLP tokens back
		3. call addLiquidity from beefy contract, send curveLP tokens and get beefyLP tokens back
					
		- removeFromPoolsAndAddtoContract()


ML model:

Person A deposits today (1K) -> After a week the values 1.1K
Person B after a week deposits (1K) -> 

1 - Deposit / withdraw to contract (and manage the thing above about when people deposit at different times)
2 - Contract has different tokens (which can trade / allocate)
3 - Contract can swap tokens using decentralized exchanges (Uniswap)
4 - Python scripts calls function of deeplearning then passes params to smart contract to swap tokens
5 - As soon as person deposits, buy corresponding token. If allocation is 100% BTC, follow current allocation
6 - Test
